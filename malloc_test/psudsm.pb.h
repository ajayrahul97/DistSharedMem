// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: psudsm.proto

#ifndef PROTOBUF_INCLUDED_psudsm_2eproto
#define PROTOBUF_INCLUDED_psudsm_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_psudsm_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_psudsm_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_psudsm_2eproto();
namespace psudsm {
class LockMessage;
class LockMessageDefaultTypeInternal;
extern LockMessageDefaultTypeInternal _LockMessage_default_instance_;
class LockReply;
class LockReplyDefaultTypeInternal;
extern LockReplyDefaultTypeInternal _LockReply_default_instance_;
class PageRead;
class PageReadDefaultTypeInternal;
extern PageReadDefaultTypeInternal _PageRead_default_instance_;
class PageReply;
class PageReplyDefaultTypeInternal;
extern PageReplyDefaultTypeInternal _PageReply_default_instance_;
class PageRequest;
class PageRequestDefaultTypeInternal;
extern PageRequestDefaultTypeInternal _PageRequest_default_instance_;
class PollMessage;
class PollMessageDefaultTypeInternal;
extern PollMessageDefaultTypeInternal _PollMessage_default_instance_;
class PollReply;
class PollReplyDefaultTypeInternal;
extern PollReplyDefaultTypeInternal _PollReply_default_instance_;
}  // namespace psudsm
namespace google {
namespace protobuf {
template<> ::psudsm::LockMessage* Arena::CreateMaybeMessage<::psudsm::LockMessage>(Arena*);
template<> ::psudsm::LockReply* Arena::CreateMaybeMessage<::psudsm::LockReply>(Arena*);
template<> ::psudsm::PageRead* Arena::CreateMaybeMessage<::psudsm::PageRead>(Arena*);
template<> ::psudsm::PageReply* Arena::CreateMaybeMessage<::psudsm::PageReply>(Arena*);
template<> ::psudsm::PageRequest* Arena::CreateMaybeMessage<::psudsm::PageRequest>(Arena*);
template<> ::psudsm::PollMessage* Arena::CreateMaybeMessage<::psudsm::PollMessage>(Arena*);
template<> ::psudsm::PollReply* Arena::CreateMaybeMessage<::psudsm::PollReply>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace psudsm {

// ===================================================================

class PollMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.PollMessage) */ {
 public:
  PollMessage();
  virtual ~PollMessage();

  PollMessage(const PollMessage& from);

  inline PollMessage& operator=(const PollMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PollMessage(PollMessage&& from) noexcept
    : PollMessage() {
    *this = ::std::move(from);
  }

  inline PollMessage& operator=(PollMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PollMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PollMessage* internal_default_instance() {
    return reinterpret_cast<const PollMessage*>(
               &_PollMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PollMessage* other);
  friend void swap(PollMessage& a, PollMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PollMessage* New() const final {
    return CreateMaybeMessage<PollMessage>(nullptr);
  }

  PollMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PollMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PollMessage& from);
  void MergeFrom(const PollMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PollMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 message_type = 1;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::google::protobuf::int32 message_type() const;
  void set_message_type(::google::protobuf::int32 value);

  // int32 page_id = 2;
  void clear_page_id();
  static const int kPageIdFieldNumber = 2;
  ::google::protobuf::int32 page_id() const;
  void set_page_id(::google::protobuf::int32 value);

  // int32 from_port_id = 3;
  void clear_from_port_id();
  static const int kFromPortIdFieldNumber = 3;
  ::google::protobuf::int32 from_port_id() const;
  void set_from_port_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.PollMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 message_type_;
  ::google::protobuf::int32 page_id_;
  ::google::protobuf::int32 from_port_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class PollReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.PollReply) */ {
 public:
  PollReply();
  virtual ~PollReply();

  PollReply(const PollReply& from);

  inline PollReply& operator=(const PollReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PollReply(PollReply&& from) noexcept
    : PollReply() {
    *this = ::std::move(from);
  }

  inline PollReply& operator=(PollReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PollReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PollReply* internal_default_instance() {
    return reinterpret_cast<const PollReply*>(
               &_PollReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PollReply* other);
  friend void swap(PollReply& a, PollReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PollReply* New() const final {
    return CreateMaybeMessage<PollReply>(nullptr);
  }

  PollReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PollReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PollReply& from);
  void MergeFrom(const PollReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PollReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.PollReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class PageRead final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.PageRead) */ {
 public:
  PageRead();
  virtual ~PageRead();

  PageRead(const PageRead& from);

  inline PageRead& operator=(const PageRead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageRead(PageRead&& from) noexcept
    : PageRead() {
    *this = ::std::move(from);
  }

  inline PageRead& operator=(PageRead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PageRead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageRead* internal_default_instance() {
    return reinterpret_cast<const PageRead*>(
               &_PageRead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PageRead* other);
  friend void swap(PageRead& a, PageRead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageRead* New() const final {
    return CreateMaybeMessage<PageRead>(nullptr);
  }

  PageRead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageRead>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageRead& from);
  void MergeFrom(const PageRead& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 page_id = 1;
  void clear_page_id();
  static const int kPageIdFieldNumber = 1;
  ::google::protobuf::int32 page_id() const;
  void set_page_id(::google::protobuf::int32 value);

  // int32 from_port_id = 2;
  void clear_from_port_id();
  static const int kFromPortIdFieldNumber = 2;
  ::google::protobuf::int32 from_port_id() const;
  void set_from_port_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.PageRead)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 page_id_;
  ::google::protobuf::int32 from_port_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class PageRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.PageRequest) */ {
 public:
  PageRequest();
  virtual ~PageRequest();

  PageRequest(const PageRequest& from);

  inline PageRequest& operator=(const PageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageRequest(PageRequest&& from) noexcept
    : PageRequest() {
    *this = ::std::move(from);
  }

  inline PageRequest& operator=(PageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageRequest* internal_default_instance() {
    return reinterpret_cast<const PageRequest*>(
               &_PageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PageRequest* other);
  friend void swap(PageRequest& a, PageRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageRequest* New() const final {
    return CreateMaybeMessage<PageRequest>(nullptr);
  }

  PageRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageRequest& from);
  void MergeFrom(const PageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 page_id = 1;
  void clear_page_id();
  static const int kPageIdFieldNumber = 1;
  ::google::protobuf::int32 page_id() const;
  void set_page_id(::google::protobuf::int32 value);

  // int32 convert_rw = 2;
  void clear_convert_rw();
  static const int kConvertRwFieldNumber = 2;
  ::google::protobuf::int32 convert_rw() const;
  void set_convert_rw(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.PageRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 page_id_;
  ::google::protobuf::int32 convert_rw_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class PageReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.PageReply) */ {
 public:
  PageReply();
  virtual ~PageReply();

  PageReply(const PageReply& from);

  inline PageReply& operator=(const PageReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PageReply(PageReply&& from) noexcept
    : PageReply() {
    *this = ::std::move(from);
  }

  inline PageReply& operator=(PageReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PageReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageReply* internal_default_instance() {
    return reinterpret_cast<const PageReply*>(
               &_PageReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PageReply* other);
  friend void swap(PageReply& a, PageReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PageReply* New() const final {
    return CreateMaybeMessage<PageReply>(nullptr);
  }

  PageReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PageReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PageReply& from);
  void MergeFrom(const PageReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 page_value = 1;
  int page_value_size() const;
  void clear_page_value();
  static const int kPageValueFieldNumber = 1;
  ::google::protobuf::int32 page_value(int index) const;
  void set_page_value(int index, ::google::protobuf::int32 value);
  void add_page_value(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      page_value() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_page_value();

  // @@protoc_insertion_point(class_scope:psudsm.PageReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > page_value_;
  mutable std::atomic<int> _page_value_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class LockMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.LockMessage) */ {
 public:
  LockMessage();
  virtual ~LockMessage();

  LockMessage(const LockMessage& from);

  inline LockMessage& operator=(const LockMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LockMessage(LockMessage&& from) noexcept
    : LockMessage() {
    *this = ::std::move(from);
  }

  inline LockMessage& operator=(LockMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LockMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LockMessage* internal_default_instance() {
    return reinterpret_cast<const LockMessage*>(
               &_LockMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(LockMessage* other);
  friend void swap(LockMessage& a, LockMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LockMessage* New() const final {
    return CreateMaybeMessage<LockMessage>(nullptr);
  }

  LockMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LockMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LockMessage& from);
  void MergeFrom(const LockMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LockMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 message_type = 1;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::google::protobuf::int32 message_type() const;
  void set_message_type(::google::protobuf::int32 value);

  // int32 mySeqNo = 2;
  void clear_myseqno();
  static const int kMySeqNoFieldNumber = 2;
  ::google::protobuf::int32 myseqno() const;
  void set_myseqno(::google::protobuf::int32 value);

  // int32 nodeId = 3;
  void clear_nodeid();
  static const int kNodeIdFieldNumber = 3;
  ::google::protobuf::int32 nodeid() const;
  void set_nodeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.LockMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 message_type_;
  ::google::protobuf::int32 myseqno_;
  ::google::protobuf::int32 nodeid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// -------------------------------------------------------------------

class LockReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:psudsm.LockReply) */ {
 public:
  LockReply();
  virtual ~LockReply();

  LockReply(const LockReply& from);

  inline LockReply& operator=(const LockReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LockReply(LockReply&& from) noexcept
    : LockReply() {
    *this = ::std::move(from);
  }

  inline LockReply& operator=(LockReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LockReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LockReply* internal_default_instance() {
    return reinterpret_cast<const LockReply*>(
               &_LockReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(LockReply* other);
  friend void swap(LockReply& a, LockReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LockReply* New() const final {
    return CreateMaybeMessage<LockReply>(nullptr);
  }

  LockReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LockReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LockReply& from);
  void MergeFrom(const LockReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LockReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:psudsm.LockReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_psudsm_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PollMessage

// int32 message_type = 1;
inline void PollMessage::clear_message_type() {
  message_type_ = 0;
}
inline ::google::protobuf::int32 PollMessage::message_type() const {
  // @@protoc_insertion_point(field_get:psudsm.PollMessage.message_type)
  return message_type_;
}
inline void PollMessage::set_message_type(::google::protobuf::int32 value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PollMessage.message_type)
}

// int32 page_id = 2;
inline void PollMessage::clear_page_id() {
  page_id_ = 0;
}
inline ::google::protobuf::int32 PollMessage::page_id() const {
  // @@protoc_insertion_point(field_get:psudsm.PollMessage.page_id)
  return page_id_;
}
inline void PollMessage::set_page_id(::google::protobuf::int32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PollMessage.page_id)
}

// int32 from_port_id = 3;
inline void PollMessage::clear_from_port_id() {
  from_port_id_ = 0;
}
inline ::google::protobuf::int32 PollMessage::from_port_id() const {
  // @@protoc_insertion_point(field_get:psudsm.PollMessage.from_port_id)
  return from_port_id_;
}
inline void PollMessage::set_from_port_id(::google::protobuf::int32 value) {
  
  from_port_id_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PollMessage.from_port_id)
}

// -------------------------------------------------------------------

// PollReply

// int32 result = 1;
inline void PollReply::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 PollReply::result() const {
  // @@protoc_insertion_point(field_get:psudsm.PollReply.result)
  return result_;
}
inline void PollReply::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PollReply.result)
}

// -------------------------------------------------------------------

// PageRead

// int32 page_id = 1;
inline void PageRead::clear_page_id() {
  page_id_ = 0;
}
inline ::google::protobuf::int32 PageRead::page_id() const {
  // @@protoc_insertion_point(field_get:psudsm.PageRead.page_id)
  return page_id_;
}
inline void PageRead::set_page_id(::google::protobuf::int32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PageRead.page_id)
}

// int32 from_port_id = 2;
inline void PageRead::clear_from_port_id() {
  from_port_id_ = 0;
}
inline ::google::protobuf::int32 PageRead::from_port_id() const {
  // @@protoc_insertion_point(field_get:psudsm.PageRead.from_port_id)
  return from_port_id_;
}
inline void PageRead::set_from_port_id(::google::protobuf::int32 value) {
  
  from_port_id_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PageRead.from_port_id)
}

// -------------------------------------------------------------------

// PageRequest

// int32 page_id = 1;
inline void PageRequest::clear_page_id() {
  page_id_ = 0;
}
inline ::google::protobuf::int32 PageRequest::page_id() const {
  // @@protoc_insertion_point(field_get:psudsm.PageRequest.page_id)
  return page_id_;
}
inline void PageRequest::set_page_id(::google::protobuf::int32 value) {
  
  page_id_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PageRequest.page_id)
}

// int32 convert_rw = 2;
inline void PageRequest::clear_convert_rw() {
  convert_rw_ = 0;
}
inline ::google::protobuf::int32 PageRequest::convert_rw() const {
  // @@protoc_insertion_point(field_get:psudsm.PageRequest.convert_rw)
  return convert_rw_;
}
inline void PageRequest::set_convert_rw(::google::protobuf::int32 value) {
  
  convert_rw_ = value;
  // @@protoc_insertion_point(field_set:psudsm.PageRequest.convert_rw)
}

// -------------------------------------------------------------------

// PageReply

// repeated int32 page_value = 1;
inline int PageReply::page_value_size() const {
  return page_value_.size();
}
inline void PageReply::clear_page_value() {
  page_value_.Clear();
}
inline ::google::protobuf::int32 PageReply::page_value(int index) const {
  // @@protoc_insertion_point(field_get:psudsm.PageReply.page_value)
  return page_value_.Get(index);
}
inline void PageReply::set_page_value(int index, ::google::protobuf::int32 value) {
  page_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:psudsm.PageReply.page_value)
}
inline void PageReply::add_page_value(::google::protobuf::int32 value) {
  page_value_.Add(value);
  // @@protoc_insertion_point(field_add:psudsm.PageReply.page_value)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PageReply::page_value() const {
  // @@protoc_insertion_point(field_list:psudsm.PageReply.page_value)
  return page_value_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PageReply::mutable_page_value() {
  // @@protoc_insertion_point(field_mutable_list:psudsm.PageReply.page_value)
  return &page_value_;
}

// -------------------------------------------------------------------

// LockMessage

// int32 message_type = 1;
inline void LockMessage::clear_message_type() {
  message_type_ = 0;
}
inline ::google::protobuf::int32 LockMessage::message_type() const {
  // @@protoc_insertion_point(field_get:psudsm.LockMessage.message_type)
  return message_type_;
}
inline void LockMessage::set_message_type(::google::protobuf::int32 value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:psudsm.LockMessage.message_type)
}

// int32 mySeqNo = 2;
inline void LockMessage::clear_myseqno() {
  myseqno_ = 0;
}
inline ::google::protobuf::int32 LockMessage::myseqno() const {
  // @@protoc_insertion_point(field_get:psudsm.LockMessage.mySeqNo)
  return myseqno_;
}
inline void LockMessage::set_myseqno(::google::protobuf::int32 value) {
  
  myseqno_ = value;
  // @@protoc_insertion_point(field_set:psudsm.LockMessage.mySeqNo)
}

// int32 nodeId = 3;
inline void LockMessage::clear_nodeid() {
  nodeid_ = 0;
}
inline ::google::protobuf::int32 LockMessage::nodeid() const {
  // @@protoc_insertion_point(field_get:psudsm.LockMessage.nodeId)
  return nodeid_;
}
inline void LockMessage::set_nodeid(::google::protobuf::int32 value) {
  
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:psudsm.LockMessage.nodeId)
}

// -------------------------------------------------------------------

// LockReply

// int32 result = 1;
inline void LockReply::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LockReply::result() const {
  // @@protoc_insertion_point(field_get:psudsm.LockReply.result)
  return result_;
}
inline void LockReply::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:psudsm.LockReply.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace psudsm

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_psudsm_2eproto
